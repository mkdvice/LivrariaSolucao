<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8cf/A6NVH7BjrThpAAAAAElFTkSuQmCC
</value>
  </data>
</root>